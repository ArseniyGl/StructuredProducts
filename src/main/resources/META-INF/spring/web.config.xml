<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <mvc:annotation-driven/>
    <context:component-scan base-package="com.structuredproducts.controllers.rest" />

<!--    &lt;!&ndash; Authentication Filter delegate &ndash;&gt;
    <bean id="AuthenticationFilter" class="com.structuredproducts.controllers.BasicAuthFilter">
        <property name="smPassword" value="123"/>
        <property name="smUser" value="admin"/>
    </bean>-->

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="ThisIsASecretSoChangeMe" />
    </bean>

    <bean id="userDao" class="com.structuredproducts.sevices.UserService">
        <property name="passwordEncoder" ref="passwordEncoder" />
    </bean>

    <bean id="unauthorizedEntryPoint" class="com.structuredproducts.controllers.UnauthorizedEntryPoint" />

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userDao">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean class="com.structuredproducts.controllers.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <constructor-arg ref="userDao" />
    </bean>
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        <property name="maxUploadSize" value="500000" />
    </bean>

    <security:http
            realm="Protected API"
            use-expressions="true"
            auto-config="false"
            create-session="stateless"
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager">

        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <security:intercept-url method="GET" pattern="/api/v1/admin/**" access="hasRole('admin')" />
        <security:intercept-url method="PUT" pattern="/api/v1/admin/**" access="hasRole('admin')" />
        <security:intercept-url method="POST" pattern="/api/v1/admin/**" access="hasRole('admin')" />
        <security:intercept-url method="DELETE" pattern="/api/v1/admin/**" access="hasRole('admin')" />
        <security:intercept-url pattern="/api/**" access="permitAll" />
        <security:csrf disabled="true" />
    </security:http>

    <mvc:resources mapping="/resources/**" location="/resources/" />
</beans>